#!/bin/bash

echo "ðŸ”‹ Electric Grid Demo Practice Script"
echo "=================================="
echo ""
echo "This script will guide you through practicing your demo."
echo "Follow along with your app running at http://localhost:5173"
echo ""

echo "ðŸ“‹ Pre-Demo Checklist:"
echo "â–¡ App is running (npm run dev)"
echo "â–¡ Browser window is visible to audience"
echo "â–¡ You've practiced the script once"
echo ""

read -p "Press Enter when ready to start demo practice..."

echo ""
echo "ðŸŽ¬ DEMO SCRIPT - Follow Along:"
echo ""

echo "ðŸŽ¯ Step 1: Introduction (30 seconds)"
echo "-----------------------------------"
echo "SAY: 'This app simulates electric power grids and shows how failures cascade'"
echo "DO: Point to the grid visualization on the right"
echo "SAY: 'Circles are power stations, lines are transmission lines'"
echo "SAY: 'Colors show health: Green=Normal, Orange=Warning, Red=Failed'"
echo ""
read -p "âœ… Ready for Step 2? Press Enter..."

echo ""
echo "ðŸŽ¯ Step 2: Load Critical Grid (30 seconds)"
echo "------------------------------------------"
echo "DO: Click 'Critical Path (6 nodes)' button"
echo "SAY: 'Notice this grid is already stressed - see the orange and red components'"
echo "DO: Point to the Grid Status section"
echo "SAY: 'We can see overloaded components and connectivity status'"
echo ""
read -p "âœ… Ready for Step 3? Press Enter..."

echo ""
echo "ðŸŽ¯ Step 3: Critical Analysis (1 minute)"
echo "---------------------------------------"
echo "DO: Click 'Analyze Critical Components' button"
echo "SAY: 'The algorithm uses Depth-First Search to test each component'"
echo "SAY: 'It finds single points of failure - if these fail, the grid splits apart'"
echo "DO: Point to any critical components shown in red"
echo "SAY: 'This is practical graph theory - finding articulation points!'"
echo ""
read -p "âœ… Ready for Step 4? Press Enter..."

echo ""
echo "ðŸŽ¯ Step 4: Cascading Failure (1 minute)"
echo "---------------------------------------"
echo "DO: Set Load Increase to 10%"
echo "DO: Click 'Simulate Cascading Failures'"
echo "SAY: 'Watch how one failure leads to another - just like real blackouts'"
echo "DO: Point to the step-by-step failure sequence"
echo "SAY: 'Each step shows the most overloaded component failing'"
echo ""
read -p "âœ… Ready for Step 5? Press Enter..."

echo ""
echo "ðŸŽ¯ Step 5: Compare Resilience (1 minute)"
echo "----------------------------------------"
echo "DO: Click 'Ring Network (5 nodes)' button"
echo "DO: Set Load Increase to 20%"
echo "DO: Click 'Simulate Cascading Failures'"
echo "SAY: 'Same stress level, but this grid survives better'"
echo "SAY: 'Ring topology has redundant paths - more resilient than linear chains'"
echo ""
read -p "âœ… Ready for Step 6? Press Enter..."

echo ""
echo "ðŸŽ¯ Step 6: Real-World Impact (30 seconds)"
echo "-----------------------------------------"
echo "SAY: 'Power companies use similar analysis to prevent blackouts'"
echo "SAY: 'The 2003 Northeast blackout affected 55 million people'"
echo "SAY: 'Started with one tree branch, cascaded through the network'"
echo "SAY: 'This helps identify weak points before they cause problems'"
echo ""

echo ""
echo "ðŸŽ‰ DEMO COMPLETE!"
echo "================"
echo ""
echo "ðŸ’¡ Key Points Covered:"
echo "âœ… Interactive grid visualization"
echo "âœ… Graph algorithms (DFS) in action"
echo "âœ… Critical component analysis"
echo "âœ… Cascading failure simulation"
echo "âœ… Topology impact on resilience"
echo "âœ… Real-world applications"
echo ""

echo "ðŸŽ¯ Next Steps:"
echo "- Practice this 2-3 times"
echo "- Time yourself (target: 5 minutes)"
echo "- Prepare for Q&A about algorithms"
echo "- Have backup materials ready"
echo ""

echo "ðŸ“š Quick References Created:"
echo "- DEMO_GUIDE.md (detailed explanation)"
echo "- README_TECHNICAL.md (technical overview)"
echo "- DEMO_CHEAT_SHEET.md (quick reference)"
echo ""

echo "Good luck with your demo! ðŸš€"
